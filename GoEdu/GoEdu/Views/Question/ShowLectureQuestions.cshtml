@model IEnumerable<GoEdu.ViewModel.VMQuestionAnswer>

@{
    ViewData["Title"] = "ShowLectureQuestions";
}

<h1>Show Lecture Questions</h1>

<form asp-action="ShowLectureQuestions" method="post">
    <div class="container">
        @for (int i = 0; i < Model.Count(); i++)
        {
            var question = Model.ElementAt(i);

            <div class="mb-4 p-3 border rounded">
                <input type="hidden" name="[@i].LectureId" value="@question.LectureId" />
                <input type="hidden" name="[@i].QuestionId" value="@question.QuestionId" />
                <input type="hidden" name="[@i].StudentId" value="@question.StudentId" />
                <input type="hidden" name="[@i].ModelAnswer" value="@question.ModelAnswer" />
                <input type="hidden" name="[@i].Content" value="@question.Content" />

                <h5>Q@(@i + 1): @question.Content</h5>

                <div class="d-flex gap-3">
                    @for (int j = 0; j < question.options.Count(); j++)
                    {
                        <label class="form-check-label">
                            <input type="radio"
                                   name="[@i].StudentAnswer"
                                   value="@question.options[j].Content"
                                   class="form-check-input" />
                            @question.options[j].Content
                        </label>
                    }
                </div>
               @*  <span asp-validation-for="[@i].StudentAnswer" class="text-danger"></span> *@
            </div>
        }

        <div class="form-group">
            <input type="submit" value="Submit Answers" class="btn btn-primary" />
        </div>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
